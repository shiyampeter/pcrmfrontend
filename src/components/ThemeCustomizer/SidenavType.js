import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Col, Form, Row } from 'react-bootstrap';
const SidenavType = ({ handleChangeSidenavType, sidenavType, sidenavConstants, }) => {
    return (_jsxs("div", { id: "sidebar-size", children: [_jsx("h6", { className: "fs-11 fw-bold text-dark text-uppercase mb-3", style: { letterSpacing: '0.5px' }, children: "Sidenav Type" }), _jsxs(Row, { className: "g-3", children: [_jsx(Col, { xs: 6, className: "text-center", children: _jsxs(Form.Check.Label, { htmlFor: "sidenavDefault", className: "radio-card", children: [_jsx(Form.Check.Input, { type: "radio", name: "data-sidenav-size", id: "sidenavDefault", value: sidenavConstants.default, onChange: (e) => handleChangeSidenavType(e.target.value), checked: sidenavType === sidenavConstants.default }), _jsxs("span", { className: "radio-card-wrapper d-flex p-3 position-relative", children: [_jsx("span", { className: "fs-11 fw-semibold text-muted text-uppercase d-block", style: { letterSpacing: '0.5px' }, children: "Default" }), _jsx("span", { className: "check-icon me-2 end-0 top-50 translate-middle-y position-absolute z-1" })] })] }) }), _jsx(Col, { xs: 6, className: "text-center", children: _jsxs(Form.Check.Label, { htmlFor: "sidenavCompact", className: "radio-card", children: [_jsx(Form.Check.Input, { type: "radio", name: "data-sidenav-size", id: "sidenavCompact", value: sidenavConstants.compact, onChange: (e) => handleChangeSidenavType(e.target.value), checked: sidenavType === sidenavConstants.compact }), _jsxs("span", { className: "radio-card-wrapper d-flex p-3 position-relative", children: [_jsx("span", { className: "fs-11 fw-semibold text-muted text-uppercase d-block", style: { letterSpacing: '0.5px' }, children: "Compact" }), _jsx("span", { className: "check-icon me-2 end-0 top-50 translate-middle-y position-absolute z-1" })] })] }) }), _jsx(Col, { xs: 6, className: "text-center", children: _jsxs(Form.Check.Label, { htmlFor: "sidenavIconbar", className: "radio-card", children: [_jsx(Form.Check.Input, { type: "radio", name: "data-sidenav-size", id: "sidenavIconbar", value: sidenavConstants.iconbar, onChange: (e) => handleChangeSidenavType(e.target.value), checked: sidenavType === sidenavConstants.iconbar }), _jsxs("span", { className: "radio-card-wrapper d-flex p-3 position-relative", children: [_jsx("span", { className: "fs-11 fw-semibold text-muted text-uppercase d-block", style: { letterSpacing: '0.5px' }, children: "Iconbar" }), _jsx("span", { className: "check-icon me-2 end-0 top-50 translate-middle-y position-absolute z-1" })] })] }) }), _jsx(Col, { xs: 6, className: "text-center", children: _jsxs(Form.Check.Label, { htmlFor: "sidenavOverlay", className: "radio-card", children: [_jsx(Form.Check.Input, { type: "radio", name: "data-sidenav-size", id: "sidenavOverlay", value: sidenavConstants.full, onChange: (e) => handleChangeSidenavType(e.target.value), checked: sidenavType === sidenavConstants.full }), _jsxs("span", { className: "radio-card-wrapper d-flex p-3 position-relative", children: [_jsx("span", { className: "fs-11 fw-semibold text-muted text-uppercase d-block", style: { letterSpacing: '0.5px' }, children: "Overlay" }), _jsx("span", { className: "check-icon me-2 end-0 top-50 translate-middle-y position-absolute z-1" })] })] }) }), _jsx(Col, { xs: 6, className: "text-center", children: _jsxs(Form.Check.Label, { htmlFor: "sidenavDetach", className: "radio-card", children: [_jsx(Form.Check.Input, { type: "radio", name: "data-sidenav-size", id: "sidenavDetach", value: sidenavConstants.detach, onChange: (e) => handleChangeSidenavType(e.target.value), checked: sidenavType === sidenavConstants.detach }), _jsxs("span", { className: "radio-card-wrapper d-flex p-3 position-relative", children: [_jsx("span", { className: "fs-11 fw-semibold text-muted text-uppercase d-block", style: { letterSpacing: '0.5px' }, children: "Detach" }), _jsx("span", { className: "check-icon me-2 end-0 top-50 translate-middle-y position-absolute z-1" })] })] }) })] })] }));
};
export default SidenavType;
