import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Col, Form, Row } from 'react-bootstrap';
const ThemeFont = ({ handleChangeThemeFont, themeFont, fontConstants }) => {
    return (_jsxs("div", { id: "layout-width", children: [_jsx("h6", { className: "fs-11 fw-bold text-dark text-uppercase mb-3", style: { letterSpacing: '0.5px' }, children: "Theme Font" }), _jsxs(Row, { className: "g-3", children: [_jsx(Col, { xs: 6, className: "text-center", children: _jsxs(Form.Check.Label, { htmlFor: "themePublic", className: "radio-card", children: [_jsx(Form.Check.Input, { type: "radio", name: "data-layout-font", id: "themePublic", value: fontConstants.public, onChange: (e) => handleChangeThemeFont(e.target.value), checked: themeFont === fontConstants.public }), _jsxs("span", { className: "radio-card-wrapper d-flex p-3 position-relative", children: [_jsx("span", { className: "fs-11 fw-semibold text-muted text-uppercase d-block", style: { letterSpacing: '0.5px' }, children: "Public Sans" }), _jsx("span", { className: "check-icon me-2 end-0 top-50 translate-middle-y position-absolute z-1" })] })] }) }), _jsx(Col, { xs: 6, className: "text-center", children: _jsxs(Form.Check.Label, { htmlFor: "themeInter", className: "radio-card", children: [_jsx(Form.Check.Input, { type: "radio", name: "data-layout-font", id: "themeInter", value: fontConstants.inter, onChange: (e) => handleChangeThemeFont(e.target.value), checked: themeFont === fontConstants.inter }), _jsxs("span", { className: "radio-card-wrapper d-flex p-3 position-relative", children: [_jsx("span", { className: "fs-11 fw-semibold text-muted text-uppercase d-block", style: { letterSpacing: '0.5px' }, children: "Inter" }), _jsx("span", { className: "check-icon me-2 end-0 top-50 translate-middle-y position-absolute z-1" })] })] }) })] })] }));
};
export default ThemeFont;
