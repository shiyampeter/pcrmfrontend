import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { ListGroup, Offcanvas, Tab, Nav, Badge, Button, Stack, Dropdown } from 'react-bootstrap';
import PerfectScrollbar from 'react-perfect-scrollbar';
import Avatar from '@/components/UiElements/Base/Avatars/Avatar';
import Loading from '@/components/Misc/Loading';
import { navItems, tabPanes } from './data/notifications';
import 'react-perfect-scrollbar/dist/css/styles.css';
const NotificationOffcanvas = ({ show, handleClose, toggleSound, isSoundOn, }) => {
    return (_jsxs(Offcanvas, { placement: "end", show: show, onHide: handleClose, style: { width: '100%', maxWidth: '460px' }, children: [_jsxs(Offcanvas.Header, { className: "d-flex align-items-center px-4 border-bottom", style: { height: '4.5rem' }, closeButton: true, children: [_jsx(Offcanvas.Title, { children: "Notifications" }), _jsxs("div", { className: "ms-auto hstack gap-1", children: [_jsx(Button, { variant: "light", onClick: toggleSound, className: "btn-icon", children: isSoundOn ? (_jsx("i", { className: "fi fi-rr-volume" })) : (_jsx("i", { className: "fi fi-rr-volume-slash text-danger" })) }), _jsxs(Dropdown, { id: "dropdown-contact-actions", children: [_jsx(Dropdown.Toggle, { variant: "light", id: "dropdown-contact-options", className: "btn-icon arrow-none", children: _jsx("i", { className: "fi fi-rr-settings" }) }), _jsxs(Dropdown.Menu, { className: "dropdown-md", children: [_jsxs(Dropdown.Item, { children: [_jsx("i", { className: "fi fi-rr-eye" }), _jsx("span", { className: "ms-3", children: "Mark all as read" })] }), _jsxs(Dropdown.Item, { children: [_jsx("i", { className: "fi fi-rr-settings" }), _jsx("span", { className: "ms-3", children: "Notification settings" })] }), _jsxs(Dropdown.Item, { children: [_jsx("i", { className: "fi fi-rr-envelope-open-text" }), _jsx("span", { className: "ms-3", children: "Open as notifications" })] }), _jsx(Dropdown.Divider, {}), _jsxs(Dropdown.Item, { children: [_jsx("i", { className: "fi fi-rr-triangle-warning" }), _jsx("span", { className: "ms-3", children: "Report Spam" })] }), _jsxs(Dropdown.Item, { children: [_jsx("i", { className: "fi fi-rr-ban" }), _jsx("span", { className: "ms-3", children: "Block Contact" })] }), _jsxs(Dropdown.Item, { children: [_jsx("i", { className: "fi fi-rr-anchor" }), _jsx("span", { className: "ms-3", children: "Report Phishing" })] }), _jsx(Dropdown.Divider, {}), _jsxs(Dropdown.Item, { className: "text-danger", children: [_jsx("i", { className: "fi fi-rr-trash" }), _jsx("span", { className: "ms-3", children: "Delete Notifications" })] })] })] })] })] }), _jsx(Offcanvas.Body, { className: "p-0 overflow-hidden", children: _jsxs(Tab.Container, { defaultActiveKey: "alls", children: [_jsx(Nav, { variant: "tabs", className: "nav-line-tabs my-3", children: navItems.map(({ key, eventKey, label, badgeColor, badgeTextColor, badgeValue }) => (_jsx(Nav.Item, { children: _jsxs(Nav.Link, { eventKey: eventKey, children: [_jsx("span", { className: "me-1", children: label }), _jsx(Badge, { bg: badgeColor, className: `text-${badgeTextColor}`, children: badgeValue })] }) }, key))) }), _jsxs(PerfectScrollbar, { className: "d-flex flex-column position-relative", style: { maxHeight: 'calc(100vh - 9rem)' }, children: [_jsx(Tab.Content, { className: "flex-grow-1", children: tabPanes.map(({ eventKey, notifications }) => (_jsx(Tab.Pane, { eventKey: eventKey, children: _jsx(ListGroup, { variant: "flush", children: notifications.map(({ avatarSrc, sender, message, time, category, actions }, index) => (_jsx(ListGroup.Item, { className: "p-4", children: _jsxs(Stack, { direction: "horizontal", gap: 3, className: "w-100 align-items-start", children: [_jsx("div", { className: "flex-grow-1", children: _jsx(Avatar, { type: "image", src: avatarSrc, alt: "User Avatar", size: "md" }) }), _jsxs("div", { className: "w-100", children: [_jsxs(Stack, { direction: "horizontal", className: "w-100 align-items-start mb-2", children: [_jsxs("div", { className: "me-4", children: [_jsx("span", { className: "fw-semibold text-dark", children: sender }), " ", message] }), _jsx("div", { className: "btn btn-icon btn-md ms-auto text-end flex-shrink-0", children: _jsx("i", { className: "fi fi-br-menu-dots-vertical" }) })] }), _jsxs(Stack, { direction: "horizontal", gap: 2, className: "text-muted mb-3", children: [_jsx("small", { className: "text-lowercase", children: time }), _jsx("span", { className: "d-inline-block bg-dark bg-opacity-25 rounded-circle", style: { width: '0.25rem', height: '0.25rem' } }), _jsx("small", { className: "text-lowercase", children: category })] }), actions && (_jsx(Stack, { direction: "horizontal", gap: 2, className: "text-muted", children: actions.map(({ variant, label, onClick }, actionIndex) => (_jsx("div", { className: `btn btn-sm py-1 btn-${variant}`, onClick: onClick, children: label }, actionIndex))) }))] })] }) }, index))) }) }, eventKey))) }), _jsx("div", { className: "m-4", children: _jsx(Loading, { className: "w-100" }) })] })] }) })] }));
};
export default NotificationOffcanvas;
