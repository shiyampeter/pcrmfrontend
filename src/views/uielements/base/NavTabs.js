import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Link } from 'react-router-dom';
import PageBreadcrumb from '@/components/Common/PageBreadcrumb';
import { Row, Col, Card, Table } from 'react-bootstrap';
import { NavTabBasic, NavTabDropdown, NavTabLineIcon, NavTabPills, NavTabRichContent, NavTabTheme, NavTabUnderline, NavTabWithIcon, } from '@/components/UiElements/Base/NavTabs';
const NavTabs = () => {
    return (_jsxs(_Fragment, { children: [_jsx(PageBreadcrumb, { title: "NavTabs", subName: "Base UI" }), _jsxs(Row, { className: "g-3 g-md-4", children: [_jsx(Col, { lg: 6, children: _jsxs(Card, { children: [_jsx(Card.Header, { children: _jsx(Card.Title, { children: "Basic" }) }), _jsx(Card.Body, { children: _jsx(NavTabBasic, {}) })] }) }), _jsx(Col, { lg: 6, children: _jsxs(Card, { children: [_jsx(Card.Header, { children: _jsx(Card.Title, { children: "Pills" }) }), _jsx(Card.Body, { children: _jsx(NavTabPills, {}) })] }) }), _jsx(Col, { lg: 6, children: _jsxs(Card, { children: [_jsx(Card.Header, { children: _jsx(Card.Title, { children: "Underline" }) }), _jsx(Card.Body, { children: _jsx(NavTabUnderline, {}) })] }) }), _jsx(Col, { lg: 6, children: _jsxs(Card, { children: [_jsx(Card.Header, { children: _jsx(Card.Title, { children: "Dropdowns" }) }), _jsx(Card.Body, { children: _jsx(NavTabDropdown, {}) })] }) }), _jsx(Col, { lg: 6, children: _jsxs(Card, { children: [_jsx(Card.Header, { children: _jsx(Card.Title, { children: "withIcon" }) }), _jsx(Card.Body, { children: _jsx(NavTabWithIcon, {}) })] }) }), _jsx(Col, { lg: 6, children: _jsxs(Card, { children: [_jsx(Card.Header, { children: _jsx(Card.Title, { children: "lineWithIcon" }) }), _jsx(Card.Body, { children: _jsx(NavTabLineIcon, {}) })] }) }), _jsx(Col, { xs: 12, children: _jsxs(Card, { children: [_jsx(Card.Header, { children: _jsx(Card.Title, { children: "Theme" }) }), _jsx(Card.Body, { children: _jsx(NavTabTheme, {}) })] }) }), _jsx(Col, { xs: 12, children: _jsxs(Card, { children: [_jsx(Card.Header, { children: _jsx(Card.Title, { children: "richContent" }) }), _jsx(Card.Body, { children: _jsx(NavTabRichContent, {}) })] }) }), _jsx(Col, { xs: 12, children: _jsxs(Card, { children: [_jsx(Card.Header, { children: _jsx(Card.Title, { children: "Options" }) }), _jsxs(Table, { className: "mb-0", responsive: true, children: [_jsx("thead", { children: _jsxs("tr", { children: [_jsx("th", { children: "Reference" }), _jsx("th", { children: "Details" })] }) }), _jsxs("tbody", { children: [_jsxs("tr", { children: [_jsx("td", { children: _jsx("code", { children: "Base nav" }) }), _jsxs("td", { children: ["Navigation available in Bootstrap share general markup and styles, from the base", ' ', _jsx("code", { children: ".nav" }), " class to the active and disabled states. Swap modifier classes to switch between each style.", _jsx("br", {}), "The base ", _jsx("code", { children: ".nav" }), " component is built with flexbox and provide a strong foundation for building all types of navigation components. It includes some style overrides (for working with lists), some link padding for larger hit areas, and basic disabled styling."] })] }), _jsxs("tr", { children: [_jsx("td", { children: _jsx("code", { children: "Tabs" }) }), _jsxs("td", { children: ["Takes the basic nav from above and adds the ", _jsx("code", { children: ".nav-tabs" }), " class to generate a tabbed interface. Use them to create tabbable regions with our", ' ', _jsx(Link, { to: "#javascript-behavior", children: "tab JavaScript plugin" }), "."] })] }), _jsxs("tr", { children: [_jsx("td", { children: _jsx("code", { children: "Pills" }) }), _jsxs("td", { children: ["Take that same HTML, but use ", _jsx("code", { children: ".nav-pills" }), " instead:"] })] }), _jsxs("tr", { children: [_jsx("td", { children: _jsx("code", { children: "Underline " }) }), _jsxs("td", { children: ["Take that same HTML, but use ", _jsx("code", { children: ".nav-underline" }), " instead:"] })] }), _jsxs("tr", { children: [_jsx("td", { children: _jsx("code", { children: "Fill and justify" }) }), _jsxs("td", { children: ["Force your ", _jsx("code", { children: ".nav" }), "'s contents to extend the full available width one of two modifier classes. To proportionately fill all available space with your", ' ', _jsx("code", { children: ".nav-item" }), "s, use ", _jsx("code", { children: ".nav-fill" }), ". Notice that all horizontal space is occupied, but not every nav item has the same width."] })] }), _jsxs("tr", { children: [_jsx("td", { children: _jsx("code", { children: "Tabs with dropdowns" }) }), _jsxs("td", { children: ["Add dropdown menus with a little extra HTML and the", ' ', _jsx(Link, { to: "/docs/5.3/components/dropdowns/#usage", children: "dropdowns JavaScript plugin" }), "."] })] }), _jsxs("tr", { children: [_jsx("td", { children: _jsx("code", { children: "JavaScript behavior" }) }), _jsxs("td", { children: ["Use the tab JavaScript plugin\u2014include it individually or through the compiled", ' ', _jsx("code", { children: "bootstrap.js" }), " file\u2014to extend our navigational tabs and pills to create tabbable panes of local content."] })] }), _jsxs("tr", { children: [_jsx("td", { children: _jsx("code", { children: "Vertical" }) }), _jsxs("td", { children: ["And with vertical pills. Ideally, for vertical tabs, you should also add", ' ', _jsx("code", { children: "aria-orientation=\"vertical\"" }), " to the tab list container."] })] }), _jsxs("tr", { children: [_jsx("td", { children: _jsx("code", { children: "withIcon" }) }), _jsx("td", { children: "Use icon tabs" })] }), _jsxs("tr", { children: [_jsx("td", { children: _jsx("code", { children: "Line" }) }), _jsxs("td", { children: ["Use ", _jsx("code", { children: "line" }), " tabs as adding class ", _jsx("code", { children: ".nav-line-tabs" })] })] }), _jsxs("tr", { children: [_jsx("td", { children: _jsx("code", { children: "Themes" }) }), _jsxs("td", { children: ["Use ", _jsx("code", { children: "themes" }), " tabs as adding class", ' ', _jsx("code", { children: ".nav-theme-tabs-(colors)" }), ". Colors can be use mapping color from", ' ', _jsx("code", { children: "($theme-colors)" }), "."] })] }), _jsxs("tr", { children: [_jsx("td", { children: _jsx("code", { children: "richContent" }) }), _jsxs("td", { children: ["Use ", _jsx("code", { children: "richContent" }), " tabs as adding class", ' ', _jsx("code", { children: ".nav-rich-content-tabs" }), " and then add class", ' ', _jsx("code", { children: ".nav-rich-content-(colors)" }), ". Colors can be use mapping color from", ' ', _jsx("code", { children: "($theme-colors)" }), "."] })] }), _jsxs("tr", { children: [_jsx("td", { children: _jsx("code", { children: "Documentations" }) }), _jsxs("td", { children: ["Please visit:", ' ', _jsx(Link, { to: "https://react-bootstrap.netlify.app/docs/components/tabs", target: "_blank", rel: "noopener noreferrer", children: "https://react-bootstrap.netlify.app/docs/components/tabs" })] })] })] })] })] }) })] })] }));
};
export default NavTabs;
